name: PR Approval via Port (Simple)

on:
  workflow_dispatch:
    inputs:
      pr_url:
        description: 'Pull Request URL'
        required: true
        type: string
      pr_number:
        description: 'Pull Request Number'
        required: true
        type: string
      approval_comment:
        description: 'Approval Comment'
        required: false
        type: string
        default: 'Approved via Port 🚀'
      run_id:
        description: 'Port Run ID'
        required: true
        type: string

permissions:
  contents: read
  pull-requests: write

jobs:
  approve-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Get Port Token
        id: port-auth
        run: |
          echo "🔐 Getting Port access token..."
          
          TOKEN=$(curl -s -X POST \
            -H "Content-Type: application/json" \
            -d '{"clientId": "${{ secrets.PORT_CLIENT_ID }}", "clientSecret": "${{ secrets.PORT_CLIENT_SECRET }}"}' \
            "https://api.getport.io/v1/auth/access_token" | jq -r '.accessToken')
          
          if [ "$TOKEN" != "null" ] && [ ! -z "$TOKEN" ]; then
            echo "✅ Port authentication successful"
            echo "TOKEN=$TOKEN" >> $GITHUB_OUTPUT
          else
            echo "❌ Port authentication failed"
            exit 1
          fi

      - name: Update Port - Starting
        run: |
          echo "🔄 Updating Port with start status..."
          
          curl -X PATCH \
            -H "Authorization: Bearer ${{ steps.port-auth.outputs.TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "status": "IN_PROGRESS",
              "message": {
                "run_status": "🔄 Starting PR approval for #${{ inputs.pr_number }}...\n\n📋 **Details:**\n- Comment: \"${{ inputs.approval_comment }}\""
              }
            }' \
            "https://api.getport.io/v1/actions/runs/${{ inputs.run_id }}"

      - name: Extract Repository Info
        id: repo-info
        run: |
          # Extract owner and repo from PR URL
          REPO_PATH=$(echo "${{ inputs.pr_url }}" | sed -n 's|https://github.com/\([^/]*/[^/]*\)/pull/.*|\1|p')
          OWNER=$(echo "$REPO_PATH" | cut -d'/' -f1)
          REPO=$(echo "$REPO_PATH" | cut -d'/' -f2)
          
          echo "OWNER=$OWNER" >> $GITHUB_OUTPUT
          echo "REPO=$REPO" >> $GITHUB_OUTPUT
          
          echo "✅ Repository: $OWNER/$REPO"

      - name: Approve Pull Request
        id: approve
        run: |
          echo "🚀 Approving PR #${{ inputs.pr_number }}"
          
          RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" \
            -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ steps.repo-info.outputs.OWNER }}/${{ steps.repo-info.outputs.REPO }}/pulls/${{ inputs.pr_number }}/reviews" \
            -d '{
              "event": "APPROVE",
              "body": "${{ inputs.approval_comment }}"
            }')
          
          HTTP_CODE=$(echo "$RESPONSE" | grep "HTTP_CODE:" | cut -d: -f2)
          BODY=$(echo "$RESPONSE" | sed '/HTTP_CODE:/d')
          
          echo "Response Code: $HTTP_CODE"
          
          if [ "$HTTP_CODE" = "200" ]; then
            echo "✅ PR approved successfully!"
            echo "SUCCESS=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Failed to approve PR (HTTP: $HTTP_CODE)"
            echo "ERROR=$BODY" >> $GITHUB_OUTPUT
            echo "SUCCESS=false" >> $GITHUB_OUTPUT
          fi

      - name: Update Port - Success
        if: steps.approve.outputs.SUCCESS == 'true'
        run: |
          echo "🎉 Updating Port with success..."
          
          curl -X PATCH \
            -H "Authorization: Bearer ${{ steps.port-auth.outputs.TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "status": "SUCCESS",
              "message": {
                "run_status": "✅ **Pull Request Approved!**\n\n🎉 PR #${{ inputs.pr_number }} approved with comment: \"${{ inputs.approval_comment }}\"\n\n🔗 [View PR](${{ inputs.pr_url }})"
              }
            }' \
            "https://api.getport.io/v1/actions/runs/${{ inputs.run_id }}"

      - name: Update Port - Failure
        if: steps.approve.outputs.SUCCESS == 'false'
        run: |
          echo "💥 Updating Port with failure..."
          
          curl -X PATCH \
            -H "Authorization: Bearer ${{ steps.port-auth.outputs.TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "status": "FAILURE", 
              "message": {
                "run_status": "❌ **Failed to Approve PR**\n\nError: ${{ steps.approve.outputs.ERROR }}\n\nCheck GitHub permissions."
              }
            }' \
            "https://api.getport.io/v1/actions/runs/${{ inputs.run_id }}"
          
          exit 1
